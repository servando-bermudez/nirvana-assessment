{"ast":null,"code":"var _jsxFileName = \"/Users/servando.bermudez/work/projects/nirvana-assessment/nirvana-fe/src/components/VideoGrid/VideoGrid.tsx\";\nimport { Col, Grid, Row } from \"antd\";\nimport VideoPreview from \"../VideoPreview/VideoPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoGrid = props => {\n  const {\n    videos\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(VideoPreview, {\n          ...video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this)\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n  // <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around' }}>\n  //   { videos.map((video: VideoInterface) => <VideoPreview key={video.id} { ...video } />) }\n  // </div>\n  ;\n};\n_c = VideoGrid;\nexport default VideoGrid;\nvar _c;\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"names":["Col","Grid","Row","VideoPreview","jsxDEV","_jsxDEV","VideoGrid","props","videos","children","gutter","map","video","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/servando.bermudez/work/projects/nirvana-assessment/nirvana-fe/src/components/VideoGrid/VideoGrid.tsx"],"sourcesContent":["import { Col, Grid, Row } from \"antd\";\nimport { VideoInterface } from \"../../interfaces/video\";\nimport VideoPreview from \"../VideoPreview/VideoPreview\";\n\nconst VideoGrid: React.FC<{ videos: VideoInterface[]}> = (props) => {\n  const { videos } = props;\n  return (\n    <Grid>\n      <Row gutter={[16, 16]}>\n        {\n          videos.map((video: VideoInterface) => (\n            <Col key={video.id} >\n             <VideoPreview { ...video } />\n            </Col>\n          ))\n        }\n      </Row>\n    </Grid>\n    // <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around' }}>\n    //   { videos.map((video: VideoInterface) => <VideoPreview key={video.id} { ...video } />) }\n    // </div>\n  )\n};\n\nexport default VideoGrid;"],"mappings":";AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,MAAM;AAErC,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAgD,GAAIC,KAAK,IAAK;EAClE,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxB,oBACEF,OAAA,CAACJ,IAAI;IAAAQ,QAAA,eACHJ,OAAA,CAACH,GAAG;MAACQ,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAAAD,QAAA,EAElBD,MAAM,CAACG,GAAG,CAAEC,KAAqB,iBAC/BP,OAAA,CAACL,GAAG;QAAAS,QAAA,eACHJ,OAAA,CAACF,YAAY;UAAA,GAAMS;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADpBJ,KAAK,CAACK,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;EACN;EACA;EACA;EAAA;AAEJ,CAAC;AAACE,EAAA,GAlBIZ,SAAgD;AAoBtD,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}