{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { actionTypes } from \"../actions/videoActions\";\nconst initialState = {\n  videos: []\n};\nexport const videoReducer = createReducer(initialState, builder => {\n  builder.addCase(actionTypes.CREATE_VIDEO, (state, action) => {\n    state.videos.push(action.payload);\n  }).addCase(actionTypes.GET_VIDEOS, (state, action) => {\n    state.videos = action.payload;\n  }).addCase(actionTypes.UPDATE_VIDEO, (state, action) => {\n    const video = action.payload;\n    const index = state.videos.findIndex(v => v.id === video.id);\n    if (index !== -1) {\n      state.videos[index] = video;\n    }\n  }).addCase(actionTypes.DELETE_VIDEO, (state, action) => {\n    const {\n      id\n    } = action.payload;\n    state.videos = state.videos.filter(v => v.id !== id);\n  });\n});","map":{"version":3,"names":["createReducer","actionTypes","initialState","videos","videoReducer","builder","addCase","CREATE_VIDEO","state","action","push","payload","GET_VIDEOS","UPDATE_VIDEO","video","index","findIndex","v","id","DELETE_VIDEO","filter"],"sources":["/Users/servando.bermudez/work/projects/nirvana-assessment/nirvana-fe/src/reducers/videoReducers.ts"],"sourcesContent":["import { PayloadAction, createReducer } from \"@reduxjs/toolkit\";\nimport { VideoInterface } from \"../interfaces/video\";\nimport { actionTypes } from \"../actions/videoActions\";\n\ninterface VideoState {\n  videos: VideoInterface[];\n}\n\nconst initialState: VideoState = {\n  videos: [],\n};\n\nexport const videoReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(actionTypes.CREATE_VIDEO, (state, action: PayloadAction<VideoInterface>) => {\n      state.videos.push(action.payload);\n    })\n    .addCase(actionTypes.GET_VIDEOS, (state, action: PayloadAction<VideoInterface[]>) => {\n      state.videos = action.payload;\n    })\n    .addCase(actionTypes.UPDATE_VIDEO, (state, action: PayloadAction<VideoInterface>) => {\n      const video = action.payload;\n      const index = state.videos.findIndex((v: VideoInterface) => v.id === video.id);\n      if (index !== -1) {\n        state.videos[index] = video;\n      }\n    })\n    .addCase(actionTypes.DELETE_VIDEO, (state, action: PayloadAction<VideoInterface>) => {\n      const { id } = action.payload;\n      state.videos = state.videos.filter((v: VideoInterface) => v.id !== id);\n    });\n})"],"mappings":"AAAA,SAAwBA,aAAa,QAAQ,kBAAkB;AAE/D,SAASC,WAAW,QAAQ,yBAAyB;AAMrD,MAAMC,YAAwB,GAAG;EAC/BC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGJ,aAAa,CAACE,YAAY,EAAGG,OAAO,IAAK;EACnEA,OAAO,CACJC,OAAO,CAACL,WAAW,CAACM,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAqC,KAAK;IACnFD,KAAK,CAACL,MAAM,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;EACnC,CAAC,CAAC,CACDL,OAAO,CAACL,WAAW,CAACW,UAAU,EAAE,CAACJ,KAAK,EAAEC,MAAuC,KAAK;IACnFD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACE,OAAO;EAC/B,CAAC,CAAC,CACDL,OAAO,CAACL,WAAW,CAACY,YAAY,EAAE,CAACL,KAAK,EAAEC,MAAqC,KAAK;IACnF,MAAMK,KAAK,GAAGL,MAAM,CAACE,OAAO;IAC5B,MAAMI,KAAK,GAAGP,KAAK,CAACL,MAAM,CAACa,SAAS,CAAEC,CAAiB,IAAKA,CAAC,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC;IAC9E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBP,KAAK,CAACL,MAAM,CAACY,KAAK,CAAC,GAAGD,KAAK;IAC7B;EACF,CAAC,CAAC,CACDR,OAAO,CAACL,WAAW,CAACkB,YAAY,EAAE,CAACX,KAAK,EAAEC,MAAqC,KAAK;IACnF,MAAM;MAAES;IAAG,CAAC,GAAGT,MAAM,CAACE,OAAO;IAC7BH,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,CAACiB,MAAM,CAAEH,CAAiB,IAAKA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC;EACxE,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}