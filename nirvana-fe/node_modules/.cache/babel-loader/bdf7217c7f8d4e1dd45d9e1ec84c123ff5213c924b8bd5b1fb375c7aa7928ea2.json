{"ast":null,"code":"var _jsxFileName = \"/Users/servando.bermudez/work/projects/nirvana-assessment/nirvana-fe/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport Main from './pages/Main';\nimport VideoPlayback, { videoLoader } from './pages/VideoPlayback';\nimport VideoGrid, { videosLoader } from './components/VideoGrid/VideoGrid';\nimport { ConfigProvider, theme } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: '/',\n    loader: videosLoader,\n    element: /*#__PURE__*/_jsxDEV(VideoGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: '/:id',\n    loader: videoLoader,\n    element: /*#__PURE__*/_jsxDEV(VideoPlayback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this)\n  }]\n}]);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    theme: {\n      algorithm: theme.darkAlgorithm\n    },\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","RouterProvider","createBrowserRouter","Main","VideoPlayback","videoLoader","VideoGrid","videosLoader","ConfigProvider","theme","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","loader","root","createRoot","document","getElementById","render","StrictMode","algorithm","darkAlgorithm"],"sources":["/Users/servando.bermudez/work/projects/nirvana-assessment/nirvana-fe/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport Main from './pages/Main';\nimport VideoPlayback, { videoLoader } from './pages/VideoPlayback';\nimport VideoGrid, { videosLoader } from './components/VideoGrid/VideoGrid';\nimport { ConfigProvider, theme } from 'antd';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <Main />,\n    children: [\n      {\n        path: '/',\n        loader: videosLoader,\n        element: <VideoGrid />\n      },\n      {\n        path: '/:id',\n        loader: videoLoader,\n        element: <VideoPlayback />\n      }\n  ]\n  },\n]);\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <ConfigProvider theme={{ algorithm: theme.darkAlgorithm }}>\n      <RouterProvider router={router} />\n    </ConfigProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,aAAa,IAAIC,WAAW,QAAQ,uBAAuB;AAClE,OAAOC,SAAS,IAAIC,YAAY,QAAQ,kCAAkC;AAC1E,SAASC,cAAc,EAAEC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;EACEW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACR,IAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACjBC,QAAQ,EAAE,CACR;IACEN,IAAI,EAAE,GAAG;IACTO,MAAM,EAAEb,YAAY;IACpBO,OAAO,eAAEH,OAAA,CAACL,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACvB,CAAC,EACD;IACEL,IAAI,EAAE,MAAM;IACZO,MAAM,EAAEf,WAAW;IACnBS,OAAO,eAAEH,OAAA,CAACP,aAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC3B,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,MAAMG,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDH,IAAI,CAACI,MAAM,eACTd,OAAA,CAACb,KAAK,CAAC4B,UAAU;EAAAP,QAAA,eACfR,OAAA,CAACH,cAAc;IAACC,KAAK,EAAE;MAAEkB,SAAS,EAAElB,KAAK,CAACmB;IAAc,CAAE;IAAAT,QAAA,eACxDR,OAAA,CAACV,cAAc;MAACW,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACpB,CAAC;;AAED;AACA;AACA;AACAlB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}